@model Snipplets.Models.HTMLHelpers

@{
    ViewBag.Title = "Test";
}

<h2>Test</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>HTMLHelpers</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.TextBox, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TextBox, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TextBox, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TextArea, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TextArea, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TextArea, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckBox, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CheckBox)
                @Html.ValidationMessageFor(model => model.CheckBox, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckBox2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CheckBox2)
                @Html.ValidationMessageFor(model => model.CheckBox2, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.CheckBox3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CheckBox3)
                @Html.ValidationMessageFor(model => model.CheckBox3, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hidden, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hidden, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("DropDown1", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DropDown1, new SelectList(Enum.GetValues(typeof(Snipplets.Models.dropdowntype))), "Select Item", new { @class = "form-control" })

            @* ,new { htmlAttributes = new { @class = "form-control" } }) *@

            @Html.ValidationMessageFor(model => model.DropDown1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("DropDown2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DropDown2, new SelectList(new List<string>() { "Wooden Cotton", "Brick Material", "Metal as Metal is" }), "Select Material", new { @class = "form-control" })

            @* ,new { htmlAttributes = new { @class = "form-control" } }) *@

            @Html.ValidationMessageFor(model => model.DropDown2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("ListBox", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.ListBox, new SelectList(new List<string>() { "List Item 1", "List Item 2", "List Item 3" }), new { @class = "form-control" })

    
    @Html.ValidationMessageFor(model => model.ListBox, "", new { @class = "text-danger" })
</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Editor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Editor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Editor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Post it ... " class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
